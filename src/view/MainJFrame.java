package view;

import controller.Actions;
import java.util.ArrayList;
import model.InvoiceTableData;
import model.InvoiceTable;
import model.InvoiceItemsData;
import controller.InvoiceSelector;
import java.text.SimpleDateFormat;
import javax.swing.JLabel;
import javax.swing.JTable;



public class MainJFrame extends javax.swing.JFrame {

    /**
     * Creates new form InvoiceFrame
     */
    public MainJFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        invoiceTable = new javax.swing.JTable();
        createNewInvoice = new javax.swing.JButton();
        deleteInvoice = new javax.swing.JButton();
        invoiceNumLable = new javax.swing.JLabel();
        invoiceDateLable = new javax.swing.JLabel();
        customerNameLable = new javax.swing.JLabel();
        invoiceTotalLable = new javax.swing.JLabel();
        currCustomerName = new javax.swing.JLabel();
        currDate = new javax.swing.JLabel();
        currInvoiceNumber = new javax.swing.JLabel();
        currTotal = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        itemsTable = new javax.swing.JTable();
        addItem = new javax.swing.JButton();
        deleteItem = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        MainMenuBar = new javax.swing.JMenuBar();
        MainMenu = new javax.swing.JMenu();
        loadFileMenu = new javax.swing.JMenuItem();
        saveFileMenu = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        invoiceTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        invoiceTable.getSelectionModel().addListSelectionListener(iSelector);
        jScrollPane1.setViewportView(invoiceTable);

        createNewInvoice.setText("Create New Invoice");
        createNewInvoice.addActionListener(actionListener);

        deleteInvoice.setText("Delete Invoice");
        deleteInvoice.addActionListener(actionListener);

        invoiceNumLable.setText("Invoice Number");

        invoiceDateLable.setText("Invoice Date");

        customerNameLable.setText("Customer Name");

        invoiceTotalLable.setText("Invoice Total");

        currCustomerName.setText("   ");

        currInvoiceNumber.setText("0");

        currTotal.setText("00.0");

        itemsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane2.setViewportView(itemsTable);

        addItem.setText("Add Item");
        addItem.addActionListener(actionListener);

        deleteItem.setText("Delete Item");
        deleteItem.addActionListener(actionListener);

        jLabel1.setText("Invoice Items");

        jLabel2.setText("Invoice Table");

        MainMenu.setText("File");

        loadFileMenu.setText("Load File");
        loadFileMenu.addActionListener(actionListener);
        MainMenu.add(loadFileMenu);

        saveFileMenu.setText("Save File");
        saveFileMenu.addActionListener(actionListener);
        MainMenu.add(saveFileMenu);

        MainMenuBar.add(MainMenu);

        setJMenuBar(MainMenuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(createNewInvoice)
                .addGap(101, 101, 101)
                .addComponent(deleteInvoice)
                .addGap(139, 139, 139)
                .addComponent(addItem)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(deleteItem)
                .addGap(98, 98, 98))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addContainerGap(823, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(customerNameLable)
                            .addComponent(invoiceDateLable)
                            .addComponent(invoiceNumLable)
                            .addComponent(invoiceTotalLable))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(currTotal)
                            .addComponent(currInvoiceNumber)
                            .addComponent(currDate)
                            .addComponent(currCustomerName)))
                    .addComponent(jLabel1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 510, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(invoiceNumLable)
                            .addComponent(currInvoiceNumber))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(invoiceDateLable)
                            .addComponent(currDate))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(customerNameLable)
                            .addComponent(currCustomerName))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(invoiceTotalLable)
                            .addComponent(currTotal))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel1)
                        .addGap(3, 3, 3)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 386, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(createNewInvoice)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(deleteInvoice)
                        .addComponent(addItem)
                        .addComponent(deleteItem)))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu MainMenu;
    private javax.swing.JMenuBar MainMenuBar;
    private javax.swing.JButton addItem;
    private javax.swing.JButton createNewInvoice;
    private javax.swing.JLabel currCustomerName;
    private javax.swing.JLabel currDate;
    private javax.swing.JLabel currInvoiceNumber;
    private javax.swing.JLabel currTotal;
    private javax.swing.JLabel customerNameLable;
    private javax.swing.JButton deleteInvoice;
    private javax.swing.JButton deleteItem;
    private javax.swing.JLabel invoiceDateLable;
    private javax.swing.JLabel invoiceNumLable;
    private javax.swing.JTable invoiceTable;
    private javax.swing.JLabel invoiceTotalLable;
    private javax.swing.JTable itemsTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JMenuItem loadFileMenu;
    private javax.swing.JMenuItem saveFileMenu;
    // End of variables declaration//GEN-END:variables
    private Actions actionListener = new Actions(this);
    private ArrayList<InvoiceTableData> tableArray;
    private ArrayList<InvoiceItemsData> itemsArray;
    private InvoiceTable iTable;
    public static SimpleDateFormat sFormat = new SimpleDateFormat("dd-MM-yyyy");
    private InvoiceSelector iSelector = new InvoiceSelector(this);

    public ArrayList<InvoiceItemsData> getItemsArray() {
        return itemsArray;
    }

    public void setItemsArray(ArrayList<InvoiceItemsData> itemsArray) {
        this.itemsArray = itemsArray;
    }
    
    public void setTableArray(ArrayList<InvoiceTableData> tableArray) {
        this.tableArray = tableArray;
    }

    public ArrayList<InvoiceTableData> getTableArray() {
        return tableArray;
    }
    
    public InvoiceTableData getHeader(int code) {
        for (InvoiceTableData inv : tableArray) {
            if (inv.getNo() == code) {
                return inv;
            }
        }
        return null;
    }

    public InvoiceTable getiTable() {
        return iTable;
    }

    public void setiTable(InvoiceTable iTable) {
        this.iTable = iTable;
    }

    public JTable getInvTable() {
        return invoiceTable;
    }

    public JTable getItemTable() {
        return itemsTable;
    }

    public JLabel getCurrCustomerName() {
        return currCustomerName;
    }

    public JLabel getCurrDate() {
        return currDate;
    }

    public JLabel getCurrInvoiceNumber() {
        return currInvoiceNumber;
    }

    public JLabel getCurrTotal() {
        return currTotal;
    }

    public Actions getActionListener() {
        return actionListener;
    }
    
    
}
